#include <iostream>

using namespace std;

struct Node{
    
    string valor;
    Node* next;
    
    Node(){
        next=NULL;
    }
    
    Node(string value){
        valor=value;
        next=NULL;
    }
    
};

struct Lista{
    
    Node* first;
    Node* last;
    int conf, conf2, aut;
    string nome;
    
    Lista(){
        first=NULL;
        last=NULL;
        conf=0;
        conf2=0;
        aut=0;
    }
    
    bool empty(){
        return first==NULL;
    }
    
    void pushFront(string palavra){
        Node* n = new Node(palavra);
        if(empty()){
            first=n;
            last=n;
            return;
        }
        n->next=first;
        first=n;
    }
    
    void imprimir(){
        Node* aux=first;
        while(aux!=NULL){
            cout<<aux->valor<<endl;
            aux=aux->next;
        }
    }
    
    void conferir(string nome, string lingua){
        Node* aux=first;
        if(aut==0){
            while(aux!=NULL){
                conf++;
                if(aux->valor==lingua){
                    aut=1;
                    return;
                }
                aux=aux->next;
            }
        }else{
            while(aux!=NULL){
                conf2++;
                if(conf2==conf){
                   cout<<nome<<endl<<aux->valor<<endl;
                   return;
                }
                aux=aux->next;
            }
        }   
        
    }
    
    /*void fim(string nome,string lingua){
        Node* aux=first;
        while(aux!=NULL){
            conf2++;
            if(conf2==1){
                cout<<nome<<endl<<aux->valor<<endl;
                aut=1;
                return;
            }
            aux=aux->next;
        }
        
        
    }*/
    
    
    
};

int main()
{
    
    Lista ord;
    Lista dro;
    
    string lingua;
    string frase;
    string nome;
    int um, dois;
    int aux;
    
    scanf("%d",&um);
    cin.ignore();
    
    for(int i=0;i<um;i++){
        
        getline(cin,lingua);
        ord.pushFront(lingua);
        
        getline(cin,frase);
        dro.pushFront(frase);
    
    }
    
   // for(int i=0;i<um;i++){
        
        ord.imprimir();
        dro.imprimir();
      
    
  //  }
    
   /* scanf("%d",&dois);
    cin.ignore();
    
    for(int i=0;i<dois;i++){
        
        getline(cin,nome);
        
        getline(cin,lingua);
        
        ord.conferir(nome,lingua);
        dro.conferir(nome,lingua);
        
    }*/
    
    return 0;
}
